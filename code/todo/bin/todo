#!/usr/bin/env ruby

require 'gli'
include GLI::App

# Default location of todo list
DEFAULT_FILE='~/todo.txt'

def read_todo(line)
  line.chomp.split(/,/)
end

def write_todo(file,name,created=Time.now,completed="")
  file.puts("#{name},#{created},#{completed}")
end

def read_todos(file)
  File.open(file,'r') do |file|
    todos = Array.new
    file.readlines.each do |line|
      todos.push(read_todo(line))
    end
  end
end

def file(file)
  file.nil? ? File.expand_path(DEFAULT_FILE) : file
end

switch :s
flag [:f, :filename]

command :new do |c|
  c.flag :priority
  c.switch :f

  c.action do |global_options,options,args|
    new_task = ARGV.shift
    File.open(file(global_options[:f]),'a') do |file|
      write_todo(file,new_task)
      puts "Task added."
    end
  end
end

command :list do |c|
  c.flag :s
  c.action do |global_options,options,args|
    todos = read_todos(file(global_options[:f]))

    if options[:s] == 'name'
      todos = todos.sort { |a,b| a <=> b }
    end
    todos.each do |todo|
      puts todo
    end
  end
end

command :done do |c|
  c.action do |global_options,options,args|
    task_number = ARGV.shift.to_i
    File.open(file(global_options[:f]),'r') do |file|
      File.open("new",'w') do |new_file|
        counter = 1
        file.readlines.each do |line|
          name,created,completed = read_todo(line)
          if task_number == counter
            write_todo(new_file,name,created,Time.now)
            puts "Task #{counter} completed"
          else
            write_todo(new_file,name,created,completed)
          end
          counter += 1
        end
      end
    end
    `mv new #{file(global_options[:f])}`
  end
end

exit run(ARGV)


